version: '3.2'
services:
  web:
    container_name: nginx
    image: nginx:1.25-alpine
    ports:
      - "80:80"
    restart: always
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./dist:/usr/share/nginx/html
    depends_on:
      - app

  app:
    build:
      context: app
    stop_signal: SIGKILL
    expose:
      - 8000
    container_name: fastapi_app
    restart: always
    ports:
      - "8000:8000"
    env_file:
      - .env
    depends_on:
      - db
    volumes:
      - ./dist/images:/app/dist/images
      - ./logs/twitter-clone:/var/log/twitter-clone
    logging:
      driver: loki
      options:
        loki-url: http://localhost:3100/loki/api/v1/push

  db:
    image: postgres:15-alpine
    container_name: database
    environment:
      - "POSTGRES_USER=${DB_USER}"
      - "POSTGRES_PASSWORD=${DB_PASS}"
      - "POSTGRES_DB=${DB_NAME}"
    ports:
      - '5432:5432'
    restart: always
    volumes:
      - ./db/:/var/lib/postgresql/data

  grafana:
    image: grafana/grafana:9.5.14
    restart: always
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
    ports:
      - "3000:3000"

  loki:
    image: grafana/loki:2.9.2
    restart: always
    ports:
      - "3100:3100"
